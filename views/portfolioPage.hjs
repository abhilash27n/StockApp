<!DOCTYPE html>
<html>
  <head>
    <title>Welcome to Stock App</title>
    <link rel='stylesheet' href='/stylesheets/style.css'/>
    <link rel="stylesheet"  href="/stylesheets/select2.css"/>
	
    <!--for ajax and selectable stuff-->
    <script src="../javascripts/jquery-1.10.2.js"></script>
    <script src="../javascripts/select2.js"></script>

    <!-- For highcharts -->
    <script src="../javascripts/Highstock-4.2.4/js/highstock.js"></script>
	<script src="../javascripts/Highstock-4.2.4/js/modules/exporting.js"></script>
  </head>
  <body>
  <h1>STOCK APP - Welcome, {{ username }}</h1>

  <!-- HIDDEN DIV TO STORE USER NAME AND USER ID and also for selling or buying stock-->
  <div id="hiddenTextFields" style="display: none;">
 	 <form id="buyOrSell" action="/buyOrSell" method="post">
		  <input type="text" value="{{ username }}" id="username" name="username"/>
		  <input type="text" value="{{ userid }}" id="userid" name="userid"/>
		  <input type="submit" id="hiddenSubmitButton"/>
	  </form>
  </div>

  	<div style='float: right;'>
  		  <a href="/stockSelectionPage"> PortFolio Management </a> </br>
		  <a href="/logout"> Logout </a>
  	</div>

    <select class="stock-selector" style='width:200px' change="stockChanged();">
    	<option></option>
	</select>
	<br>
	<div id="realTimeWithPredictionStockChart" style="height: 400px; min-width: 310px"></div>
	<br>
	<div id="historicalStockChart" style="height: 400px; min-width: 310px"></div>
	<br>


    <!--ADDING AJAX CALLS ON SUBMIT-->
    <!-- Overriding submit with ajax call-->
    <script type="text/javascript">

	    $(document).ready(function() {
	    	var user = document.getElementById("userid").value;
	    	$.getJSON('http://localhost:3000/getAllStocks?user='+user, function(data){
	    		$(".stock-selector").select2({
				  	data: data,
				  	placeholder: "Select a stock",
				  	allowClear: true
			  	});
	    	});

		});

	    ///STOCK SELECTOR
	    var $eventSelect = $(".stock-selector");
	    $eventSelect.on("select2:select", function (e) { 
	    	var selectedStock = e.params.data.id;    //or data.text
	    	createRealTimewWithPredictionChart(selectedStock);
	    }); 


	    //STOCK CHART
	    // Load the fonts
	    //CHART DESIGN - BEGIN
		Highcharts.createElement('link', {
		   href: '//fonts.googleapis.com/css?family=Unica+One',
		   rel: 'stylesheet',
		   type: 'text/css'
		}, null, document.getElementsByTagName('head')[0]);

		Highcharts.theme = {
		   colors: ["#2b908f", "#90ee7e", "#f45b5b", "#7798BF", "#aaeeee", "#ff0066", "#eeaaee",
		      "#55BF3B", "#DF5353", "#7798BF", "#aaeeee"],
		   chart: {
		      backgroundColor: {
		         linearGradient: { x1: 0, y1: 0, x2: 1, y2: 1 },
		         stops: [
		            [0, '#2a2a2b'],
		            [1, '#3e3e40']
		         ]
		      },
		      style: {
		         fontFamily: "'Unica One', sans-serif"
		      },
		      plotBorderColor: '#606063'
		   },
		   title: {
		      style: {
		         color: '#E0E0E3',
		         textTransform: 'uppercase',
		         fontSize: '20px'
		      }
		   },
		   subtitle: {
		      style: {
		         color: '#E0E0E3',
		         textTransform: 'uppercase'
		      }
		   },
		   xAxis: {
		      gridLineColor: '#707073',
		      labels: {
		         style: {
		            color: '#E0E0E3'
		         }
		      },
		      lineColor: '#707073',
		      minorGridLineColor: '#505053',
		      tickColor: '#707073',
		      title: {
		         style: {
		            color: '#A0A0A3'

		         }
		      }
		   },
		   yAxis: {
		      gridLineColor: '#707073',
		      labels: {
		         style: {
		            color: '#E0E0E3'
		         }
		      },
		      lineColor: '#707073',
		      minorGridLineColor: '#505053',
		      tickColor: '#707073',
		      tickWidth: 1,
		      title: {
		         style: {
		            color: '#A0A0A3'
		         }
		      }
		   },
		   tooltip: {
		      backgroundColor: 'rgba(0, 0, 0, 0.85)',
		      style: {
		         color: '#F0F0F0'
		      }
		   },
		   plotOptions: {
		      series: {
		         dataLabels: {
		            color: '#B0B0B3'
		         },
		         marker: {
		            lineColor: '#333'
		         }
		      },
		      boxplot: {
		         fillColor: '#505053'
		      },
		      candlestick: {
		         lineColor: 'white'
		      },
		      errorbar: {
		         color: 'white'
		      }
		   },
		   legend: {
		      itemStyle: {
		         color: '#E0E0E3'
		      },
		      itemHoverStyle: {
		         color: '#FFF'
		      },
		      itemHiddenStyle: {
		         color: '#606063'
		      }
		   },
		   credits: {
		      style: {
		         color: '#666'
		      }
		   },
		   labels: {
		      style: {
		         color: '#707073'
		      }
		   },

		   drilldown: {
		      activeAxisLabelStyle: {
		         color: '#F0F0F3'
		      },
		      activeDataLabelStyle: {
		         color: '#F0F0F3'
		      }
		   },

		   navigation: {
		      buttonOptions: {
		         symbolStroke: '#DDDDDD',
		         theme: {
		            fill: '#505053'
		         }
		      }
		   },

		   // scroll charts
		   rangeSelector: {
		      buttonTheme: {
		         fill: '#505053',
		         stroke: '#000000',
		         style: {
		            color: '#CCC'
		         },
		         states: {
		            hover: {
		               fill: '#707073',
		               stroke: '#000000',
		               style: {
		                  color: 'white'
		               }
		            },
		            select: {
		               fill: '#000003',
		               stroke: '#000000',
		               style: {
		                  color: 'white'
		               }
		            }
		         }
		      },
		      inputBoxBorderColor: '#505053',
		      inputStyle: {
		         backgroundColor: '#333',
		         color: 'silver'
		      },
		      labelStyle: {
		         color: 'silver'
		      }
		   },

		   navigator: {
		      handles: {
		         backgroundColor: '#666',
		         borderColor: '#AAA'
		      },
		      outlineColor: '#CCC',
		      maskFill: 'rgba(255,255,255,0.1)',
		      series: {
		         color: '#7798BF',
		         lineColor: '#A6C7ED'
		      },
		      xAxis: {
		         gridLineColor: '#505053'
		      }
		   },

		   scrollbar: {
		      barBackgroundColor: '#808083',
		      barBorderColor: '#808083',
		      buttonArrowColor: '#CCC',
		      buttonBackgroundColor: '#606063',
		      buttonBorderColor: '#606063',
		      rifleColor: '#FFF',
		      trackBackgroundColor: '#404043',
		      trackBorderColor: '#404043'
		   },

		   // special colors for some of the
		   legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',
		   background2: '#505053',
		   dataLabelsColor: '#B0B0B3',
		   textColor: '#C0C0C0',
		   contrastTextColor: '#F0F0F3',
		   maskColor: 'rgba(255,255,255,0.3)'
		};
		//CHART DESIGN END
		// Apply the theme
		Highcharts.setOptions(Highcharts.theme);
	    function createRealTimewWithPredictionChart(selectedStock) {
		    var seriesOptions = [],
		        seriesCounter = 0,
		        name = selectedStock;

		    /**
		     * Create the chart when all data is loaded
		     * @returns {undefined}
		     */
		    function createChart() {

		        $('#realTimeWithPredictionStockChart').highcharts('StockChart', {

		            rangeSelector: {
		                selected: 4
		            },

		            yAxis: {
		                labels: {
		                    formatter: function () {
		                        return (this.value > 0 ? ' + ' : '') + this.value + '%';
		                    }
		                },
		                plotLines: [{
		                    value: 0,
		                    width: 2,
		                    color: 'silver'
		                }]
		            },

		            plotOptions: {
		                series: {
		                    compare: 'percent'
		                }
		            },

		            tooltip: {
		                pointFormat: '<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b> ({point.change}%)<br/>',
		                valueDecimals: 2
		            },

		            series: seriesOptions
		        });
		    }


	        $.getJSON('http://localhost:3000/getHistoricalStockData?stock='+name,    function (data) {

	            seriesOptions[0] = {
	                name: name + " ACTUAL STOCK DATA",
	                data: data
	            };

	            // As we're loading the data asynchronously, we don't know what order it will arrive. So
	            // we keep a counter and create the chart when all the data is loaded.
	            seriesCounter += 1;

	            if (seriesCounter === 2) {
	                createChart();
	            }
	        });

	        $.getJSON('http://localhost:3000/getHistoricalStockData?stock=GOOG',    function (data) {

	            seriesOptions[1] = {
	                name: name + " PREDICTED STOCK DATA",
	                data: data
	            };

	            // As we're loading the data asynchronously, we don't know what order it will arrive. So
	            // we keep a counter and create the chart when all the data is loaded.
	            seriesCounter += 1;

	            if (seriesCounter === 2) {
	                createChart();
	            }
	        });
	    
		}


    </script>

  </body>
</html>
